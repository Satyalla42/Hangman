# -*- coding: utf-8 -*-
"""Hangman.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1m-hkRTBUx2Dx7FFiu5OVMCyQN0ithGKK
"""

# your code here

# you can experiment with smaller chunks of code here
word_list = [
    "BUBBLE", "GIGGLE", "JELLYBEAN", "ZIGZAG", "WIGGLE",
    "PUPPY", "BANANA", "CUPCAKE", "UNICORN", "MARSHMALLOW",
    "SQUIRREL", "LOLLIPOP", "PINEAPPLE", "TOOTSIE", "SNICKERDOODLE",
    "CHOCOLATE", "PICKLE", "RAINBOW", "GUMDROP", "WHIMSICAL",
    "CARNIVAL", "FIZZLE", "GOOSEBUMPS", "PEANUT", "SPRINKLES",
    "HULAHOOP", "YOYO", "PUDDLE", "JUMPY", "CUDDLE"
]

###WORKING AND FINAL VERSION STEP 1, STEP 2 and STEP 3 + step 4
import random
answer_word = random.choice(word_list)
attempt = 0
hidden_word = ("_"*len(answer_word))

remaining_mistakes = 7

while remaining_mistakes > 0:
  print(f"Hidden word is: {hidden_word}")
  picked_letter = input("Please pick a letter: ").upper()
  if not picked_letter.isalpha():
    print("==========================")
    print("Invalid input! Please enter a letter, not a number.")
  index_count = 0                                                               #Inside the while loop, but before the for loop, define a variable called index_count.

  updated_word = ""
  for i in range(len(answer_word)):                                                   #Create a for loop inside the while loop (after the user input) that will iterate over all the letters in answer_word.
    if answer_word[i] == picked_letter:                                                   #Use an if statement inside this loop to check each letter in answer_word against the picked_letter and see if they match.
     updated_word += picked_letter
     index_count += 2                                                            #Inside the for loop, after the incomplete if statement, increment the index_count by 2 each time it loops.
    else:
      updated_word += hidden_word[i]                                            ##Now we want to update hidden_word so that, when the letter guessed is in the answer_word, we replace the corresponding underscores in hidden word with the correctly guessed letter

  hidden_word = updated_word
  if picked_letter in answer_word:
    print(f"Correct! The word contains the letter: {picked_letter}")
  else:
      for i, (key, value) in enumerate(hangman.items()):
        if i == attempt:
          print(key,value)
          remaining_mistakes -= 1
          print(f"Wrong! Number of mistakes left: {remaining_mistakes}")
          print("==========================")
          break
  attempt += 1

  if "_" not in hidden_word:
    print(f"CONGRATULATIONS! You have guessed correct the word {hidden_word}")
    break
if remaining_mistakes == 0:
  print("HANGED!!")